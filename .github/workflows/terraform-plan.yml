name: Terraform Plan

on:
  workflow_dispatch:

jobs:
  plan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install AWS SDK v3
        run: npm install @aws-sdk/client-sts

      - name: Configure AWS credentials using AWS SDK v3
        id: aws-credentials
        run: |
          node <<EOF
          const { STSClient, AssumeRoleCommand } = require("@aws-sdk/client-sts");
          const client = new STSClient({ region: "us-west-2" });
          const assumeRoleCommand = new AssumeRoleCommand({
            RoleArn: "arn:aws:iam::654654392619:role/github-actions-role",
            RoleSessionName: "GitHubActions",
          });
          client.send(assumeRoleCommand).then(data => {
            console.log(`::set-output name=aws_access_key_id::${data.Credentials.AccessKeyId}`);
            console.log(`::set-output name=aws_secret_access_key::${data.Credentials.SecretAccessKey}`);
            console.log(`::set-output name=aws_session_token::${data.Credentials.SessionToken}`);
          });
          EOF

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ steps.aws-credentials.outputs.aws_access_key_id }}
          aws configure set aws_secret_access_key ${{ steps.aws-credentials.outputs.aws_secret_access_key }}
          aws configure set aws_session_token ${{ steps.aws-credentials.outputs.aws_session_token }}
          aws configure set region us-west-2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: Initialize Terraform
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=plan.out

      - name: Upload Plan
        uses: actions/upload-artifact@v2
        with:
          name: terraform-plan-${{ github.run_id }}
          path: plan.out
